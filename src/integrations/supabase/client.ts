
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { toast } from 'sonner';

const SUPABASE_URL = "https://woydllhveibnepwjjnzr.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndveWRsbGh2ZWlibmVwd2pqbnpyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY1MzQ0NzAsImV4cCI6MjA2MjExMDQ3MH0.7wOIhVbzG3kotS-gZEdhr0deXSNf364cIXNljh4JMCo";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: true,
      storage: {
        // Use local storage by default
        getItem: (key) => localStorage.getItem(key),
        setItem: (key, value) => localStorage.setItem(key, value),
        removeItem: (key) => localStorage.removeItem(key),
      }
    },
    global: {
      headers: {
        'x-application-name': 'Subscriply'
      }
    },
    // Configuração para mensagens de erro amigáveis em português
    db: {
      schema: 'public'
    }
  }
);

// Set up an error handler function instead of directly attaching to the client
// This can be used with try/catch blocks when making Supabase API calls
export const handleApiError = (error: any) => {
  console.error('Supabase API Error:', error);
  toast.error(error.message || 'Ocorreu um erro ao comunicar com o servidor');
  return error;
};
